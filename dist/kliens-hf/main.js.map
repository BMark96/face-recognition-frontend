{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/app/app.component.css","webpack:///./src/app/components/app/app.component.html","webpack:///./src/app/components/app/app.component.ts","webpack:///./src/app/components/image/image.component.css","webpack:///./src/app/components/image/image.component.html","webpack:///./src/app/components/image/image.component.ts","webpack:///./src/app/components/images/images.component.css","webpack:///./src/app/components/images/images.component.html","webpack:///./src/app/components/images/images.component.ts","webpack:///./src/app/models/image.type.ts","webpack:///./src/app/services/comparator.service.ts","webpack:///./src/app/services/face.service.ts","webpack:///./src/app/services/id-provider.service.ts","webpack:///./src/app/services/image.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatButtonModule } from '@angular/material';\nimport { MatCardModule } from '@angular/material';\nimport { MatToolbarModule } from '@angular/material';\nimport { MatIconModule } from '@angular/material';\n\nimport { ImageService } from './services/image.service';\nimport { ComparatorService } from './services/comparator.service';\nimport { FaceService } from './services/face.service';\nimport { IdProviderService } from './services/id-provider.service';\n\nimport { AppComponent } from './components/app/app.component';\nimport { ImageComponent } from './components/image/image.component';\nimport { ImagesComponent } from './components/images/images.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImageComponent,\n    ImagesComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIconModule,\n    HttpClientModule\n  ],\n  providers: [ImageService, FaceService, ComparatorService, IdProviderService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \".face-icon {\\n    padding: 0 14px;\\n    vertical-align: middle;\\n}\\n\\n.app-toolbar {\\n    margin-bottom: 1%;\\n}\\n\\n.comparator {\\n    background-color: rgb(48, 47, 47);\\n}\\n\\n.page-header {\\n    background-color: rgb(0, 128, 121);\\n}\\n\\n.result {\\n    flex: 1 1 auto;\\n    text-align: center;\\n}\"","module.exports = \"<mat-toolbar class=\\\"app-toolbar\\\" color=\\\"primary\\\">\\n    <mat-toolbar-row class=\\\"page-header\\\">\\n        <mat-icon class=\\\"face-icon\\\">face</mat-icon>\\n        Face Comparator\\n    </mat-toolbar-row>\\n    <mat-toolbar-row class=\\\"comparator\\\">\\n        <span class=\\\"result\\\">\\n            {{getMessage()}}\\n        </span>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n<app-images></app-images>\"","import { Component } from '@angular/core';\n\nimport { ComparatorService } from '../../services/comparator.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private comparatorService: ComparatorService) {}\n\n  /**\n   * Get feedback message shown in second line of toolbar.\n   * @returns       Toolbar message.\n   */\n  getMessage() {\n    return this.comparatorService.getMessage();\n  }\n}\n","module.exports = \".image-card {\\n    margin: 10px;\\n    background-color: rgb(236, 234, 234);\\n}\\n\\n.image-button {\\n    margin: 5px;\\n}\\n\\n.image-button-upload {\\n    background-color: rgb(0, 128, 121)\\n}\\n\\n.image-text {\\n    font-size: 150%;\\n}\\n\\n.image-container {\\n    position: relative;\\n    top: 0;\\n    left: 0;\\n}\\n\\n.image-photo {\\n    position: relative;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.rectangles {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n}\\n\\n\"","module.exports = \"<input #fileInput type='file' (change)=\\\"onFileUploaded($event)\\\" hidden/>\\n<mat-card class=\\\"image-card\\\">\\n  <mat-card-header>\\n    <mat-card-title class=\\\"image-text\\\">{{header}}</mat-card-title>\\n  </mat-card-header>\\n  \\n  <div #imageContainer class=\\\"image-container\\\">\\n    <img #image class=\\\"image-photo\\\" [src]=\\\"getImageSrc()\\\">\\n    <!--svg class=\\\"rectangles\\\" *ngFor='let rectangle of getBoundingBoxes();'>\\n      <rect  \\n        [attr.x]=\\\"rectangle.left\\\"\\n        [attr.y]=\\\"rectangle.top\\\"\\n        [attr.width]=\\\"rectangle.width\\\"\\n        [attr.height]=\\\"rectangle.height\\\"/>\\n    </svg-->\\n  </div>\\n\\n  <span fxLayoutAlign=\\\"center\\\">\\n    <button class=\\\"image-button image-button-upload\\\" (click)=\\\"fileInput.click()\\\" mat-fab color=\\\"primary\\\">\\n        <mat-icon aria-label=\\\"Upload image\\\">add</mat-icon>\\n    </button>\\n    <button class=\\\"image-button\\\" (click)=\\\"onImageDeleted()\\\" mat-fab color=\\\"warn\\\" [disabled]=\\\"!isImageLoaded\\\">\\n        <mat-icon aria-label=\\\"Delete image\\\">clear</mat-icon>\\n    </button>\\n  </span>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Image } from '../../models/image.type';\nimport { Face } from '../../models/face.type';\nimport { BoundingBox } from '../../models/bounding-box.type';\n\nimport { FaceService } from '../../services/face.service';\nimport { ImageService } from '../../services/image.service';\nimport { ComparatorService } from '../../services/comparator.service';\nimport { IdProviderService } from '../../services/id-provider.service';\n\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.css']\n})\nexport class ImageComponent implements OnInit {\n  header: string = \"No image with face\";\n  isImageLoaded: boolean;\n  private id: number;\n  private image: Image;\n  private faces: Face[] = [];\n\n  constructor(\n    private imageService: ImageService, \n    private faceService: FaceService, \n    private comparatorService: ComparatorService,\n    private idProviderService: IdProviderService\n  ) {}\n\n  /**\n   * Initialization\n   */\n  ngOnInit() {\n    this.image = new Image;\n    this.id = this.idProviderService.getNextId(); // Generate id for card\n  }\n\n  /**\n   * Get message shown on top of card\n   * @returns       Card header message.\n   */\n  getHeader() {\n    return this.faces.length == 0 ? \"No image with face\" : this.faces[0].faceAttributes.age + \" year old \" + this.faces[0].faceAttributes.gender;\n  }\n\n  /**\n   * Event handler for handling file upload button clicks.\n   * @param event  Event object containing the chosen file.\n   */\n  onFileUploaded(event) {\n    var data = event.target.files[0];\n    this.imageService.readImageAsBase64(data, this.onImageLoaded.bind(this)); // Base64 conversion, call onImageLoaded() when ready\n  }\n  \n  /**\n   * Called when base64 conversion is ready. Sets base64 string, calls face searching method.\n   * @param imageEncoded  Base64 encoded image.\n   */\n  onImageLoaded(imageEncoded) {\n    this.image.imageBase64 = imageEncoded;\n    this.isImageLoaded = true;\n\n    this.getFaces();  // Search for faces when image is loaded\n  }\n\n  /**\n   * Looking for faces using FaceService.\n   */\n  getFaces() {\n    this.header = \"loading...\";\n    this.comparatorService.setIsLoading(true);\n    this.faceService.getFaces(this.image.imageBase64).subscribe(\n      faces => {\n        this.faces = faces;\n        this.comparatorService.setIsLoading(false);\n        if(this.faces.length > 0) { // found faces\n          this.comparatorService.setFaceId(this.id, this.faces[0].faceId);\n          this.comparatorService.setImageContainsFace(this.id, true);\n          this.header = this.faces[0].faceAttributes.age + \" year old \" + this.faces[0].faceAttributes.gender;\n        } else {  // no faces found\n          this.comparatorService.setImageContainsFace(this.id, false);\n          this.header = \"No image with face\";\n        }\n      }\n    ); \n  }\n\n  /**\n   * Event handler for handling file delete button clicks. Deletes base64 encoded image.\n   */\n  onImageDeleted() {\n    this.image.imageBase64 = \"\";\n    this.isImageLoaded = false;\n    this.comparatorService.setImageContainsFace(this.id, false);\n    this.comparatorService.setIsLoading(false);\n    this.header = \"No image with face\";\n  }\n\n  /**\n   * Get base64 source of image that can be used as src in img HTML tag. Uses ImageService.\n   * @returns       Base64 source of image.\n   */\n  getImageSrc() {\n    return this.isImageLoaded ? this.imageService.getImageSrc(this.image) : \"\";\n  }\n\n  // getBoundingBoxes() {\n  //   let boundingBoxes = new Array<BoundingBox>();\n  //   for(let i = 0; i < this.faces.length; i++) {\n  //     boundingBoxes.push(this.faces[i].faceRectangle);\n  //   }\n  //   return boundingBoxes;\n  // }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"5%\\\" fxLayoutAlign=\\\"center\\\">\\n    <div fxFlex=\\\"28%\\\" fxFlex.md=\\\"35%\\\" fxFlex.sm=\\\"45%\\\">\\n        <app-image></app-image>\\n    </div>\\n    <div fxFlex=\\\"28\\\" fxFlex.md=\\\"35%\\\" fxFlex.sm=\\\"45%\\\">\\n        <app-image></app-image>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-images',\n  templateUrl: './images.component.html',\n  styleUrls: ['./images.component.css']\n})\nexport class ImagesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { BoundingBox } from \"./bounding-box.type\";\n\nexport class Image {\n    prefixBase64: string = \"data:image/png;base64,\";\n    imageBase64: string;\n\n    boundingBox: BoundingBox;\n    age: number;\n    gender: string;\n}","import { Injectable } from \"@angular/core\";\n\nimport { Image } from \"../models/image.type\";\nimport { FaceService } from \"./face.service\";\n\n@Injectable()\nexport class ComparatorService {\n    constructor(private faceService: FaceService) {}\n\n    private firstImageContainsFace: boolean = false;\n    private secondImageContainsFace: boolean = false;\n    private firstFaceId: string;\n    private secondFaceId: string;\n    private confidence: number = null;\n    private isLoading = false;\n\n    /**\n     * Set FaceId of cards. FaceId value is used for comparison by Microsoft Face API.\n     * @param id  Id of card.\n     * @param faceId  FaceId of the face having the largest bounding box.\n     */\n    setFaceId(id, faceId) {\n        id == 1 ? this.firstFaceId = faceId : this.secondFaceId = faceId;\n    }\n\n    /**\n     * Get number of cards having images containing faces.\n     * @returns       Number of cards with face image.\n     */\n    getNImagesWithFaces() {\n        return (this.firstImageContainsFace ? 1 : 0) + (this.secondImageContainsFace ? 1 : 0);\n    }\n\n    /**\n     * Set boolean value that stores if the image on card contains at least 1 face.\n     * @param id  Id of card.\n     * @param value  True if image stores at least 1 face, false otherwise.\n     */\n    setImageContainsFace(id, value) {\n        id == 1 ? this.firstImageContainsFace = value : this.secondImageContainsFace = value;\n        if(this.getNImagesWithFaces() == 2) {   // Both images with faces uploaded\n            this.compare();\n        }\n        else {\n            this.confidence = null;\n        }\n    }\n\n    /**\n     * Compare 2 faces using FaceService. Sets confidence value.\n     */\n    compare() {\n        this.faceService.getSimilarity(this.firstFaceId, this.secondFaceId).subscribe(\n            result=>{\n                this.confidence = result[0].confidence; // Setting confidence when value arrives\n            }\n        );\n    }\n\n    /**\n     * Get feedback message shown in second line of toolbar.\n     * @returns       Toolbar message.\n     */\n    getMessage() {\n        if(this.isLoading) {\n            return \"loading...\"\n        }\n\n        let message = \"\";\n        switch(this.getNImagesWithFaces()) {\n            case 0:\n                message = \"Upload 2 more images containing a face\";\n                break;\n            case 1:\n                message = \"Upload 1 more image containing a face\";\n                break;\n            case 2:\n                this.confidence ? (message = \"Similarity: \" + (this.confidence * 100).toFixed(2) + \"%\") : message = \"Similarity: loading...\";\n                break;\n            default: \n                break;\n        }\n        return message;\n    } \n\n    /**\n     * Set boolean value that stores if waiting for toolbar message.\n     * @param value  True if waiting, false otherwise.\n     */\n    setIsLoading(value) {\n        this.isLoading = value;\n    }\n}","import { Observable } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Image } from \"../models/image.type\";\nimport { Face } from '../models/face.type';\nimport { Similarity } from \"../models/similarity.type\";\n\n@Injectable()\nexport class FaceService {\n    constructor(private http: HttpClient) {}\n\n    private subscriptionKey: string = \"ad22a1edffd6416fafa7725a7ce11513\";\n    private endpoint: string = \"https://westcentralus.api.cognitive.microsoft.com/face/v1.0/\";\n\n    /**\n     * Create blob from Base64 image that can be sent to Microsoft Face API.\n     * @param imageBase64   Base64 encoded image.\n     * @returns             Blob can be sent to API.\n     */\n    private createBlob(imageBase64) {\n        const byteCharacters = atob(imageBase64);\n        let byteNumbers = new Array(byteCharacters.length);\n        \n        for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n\n        let byteArray = new Uint8Array(byteNumbers);\n        let blob = new Blob([byteArray], {type: ''});\n        return blob;\n    }\n\n    /**\n     * Generate HTTP headers for HTTP post using content type and API subscription key.\n     * @param contentType   Content type.\n     * @returns             Generated headers. \n     */\n    private getHeaders(contentType) {\n        const headers = new HttpHeaders()\n            .set('Content-Type', contentType)\n            .set('Ocp-Apim-Subscription-Key', this.subscriptionKey);\n    \n        return headers;\n    }\n\n    /**\n     * Generate HTTP params for HTTP post for getting faces.\n     * @returns             Generated headers. \n     */\n    private getParams() {\n        const params = new HttpParams()\n            .set('returnFaceId', 'true')\n            .set('returnFaceLandmarks', 'false')\n            .set('returnFaceAttributes', 'age,gender');\n        \n        return params; \n    }\n\n    /**\n     * Get faces using Microsoft Face API.\n     * @param base64Image   Base64 image where the function looks for faces.\n     * @returns             Observable for faces found.\n     */\n    getFaces(base64Image): Observable<Face[]> {\n        const headers = this.getHeaders('application/octet-stream');\n        const params = this.getParams();\n        const blob = this.createBlob(base64Image);\n\n        return this.http.post<Face[]>(\n            this.endpoint + \"detect\",\n            blob,\n            {\n                params,\n                headers\n            }\n        );  \n    }\n\n    /**\n     * Get similarity using Microsoft Face API.\n     * @param faceId1       Id of 1st face used for comparison.\n     * @param faceId2       Id of 2nd face used for comparison.\n     * @returns             Observable for similarities found.\n     */\n    getSimilarity(faceId1, faceId2): Observable<Similarity[]> {\n        const headers = this.getHeaders('application/json');\n\n        return this.http.post<Similarity[]>(\n            this.endpoint + \"findsimilars\",\n            {\n                \"faceId\": faceId1,\n                \"faceIds\": [faceId2],\n                \"maxNumOfCandidatesReturned\": 1,\n                \"mode\": \"matchFace\"\n            },\n            {\n                headers\n            }\n        );  \n    }\n}","import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class IdProviderService {\n    private nextId: number = 1;\n\n    constructor() {}\n\n    /**\n     * Generate id for card.\n     * @returns       Generated id.\n     */\n    getNextId() {\n        let id = this.nextId;\n        this.nextId += 1;\n        return id;\n    }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { Image } from \"../models/image.type\";\n\n@Injectable()\nexport class ImageService {\n    constructor() {}\n\n    /**\n     * Get Base64 source of image.\n     * @param image   Image that stores Base64 prefix and content.\n     * @returns       Image source.\n     */\n    getImageSrc(image: Image) {\n        return image.prefixBase64 + image.imageBase64;\n    }\n\n    /**\n     * Read image and convert it to Base64 string.\n     * @param data   Image data.\n     */\n    readImageAsBase64(data, callback) {\n        var reader = new FileReader();\n\n        reader.onload = (e: Event & { target: { result: string } }) => {\n            var binaryString = e.target.result;\n            var imageEncoded = btoa(binaryString);\n            callback(imageEncoded);\n        }\n\n        reader.readAsBinaryString(data);\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}